%!PS-Adobe-2.0
%%Title: test.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Fri Jan 25 17:17:12 2013
%%DocumentFonts: (atend)
%%BoundingBox: 176 50 554 590
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 176 50 moveto 554 50 lineto 554 590 lineto 176 590 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (L_SR)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jan 25 17:17:12 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
770 448 M
63 0 V
4244 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
770 843 M
63 0 V
4244 0 R
-63 0 V
stroke
686 843 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.02)]
] -46.7 MRshow
1.000 UL
LTb
770 1239 M
63 0 V
4244 0 R
-63 0 V
stroke
686 1239 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.04)]
] -46.7 MRshow
1.000 UL
LTb
770 1634 M
63 0 V
4244 0 R
-63 0 V
stroke
686 1634 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.06)]
] -46.7 MRshow
1.000 UL
LTb
770 2030 M
63 0 V
4244 0 R
-63 0 V
stroke
686 2030 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.08)]
] -46.7 MRshow
1.000 UL
LTb
770 2425 M
63 0 V
4244 0 R
-63 0 V
stroke
686 2425 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
770 2820 M
63 0 V
4244 0 R
-63 0 V
stroke
686 2820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.12)]
] -46.7 MRshow
1.000 UL
LTb
770 3216 M
63 0 V
4244 0 R
-63 0 V
stroke
686 3216 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.14)]
] -46.7 MRshow
1.000 UL
LTb
770 3611 M
63 0 V
4244 0 R
-63 0 V
stroke
686 3611 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.16)]
] -46.7 MRshow
1.000 UL
LTb
985 448 M
0 63 V
0 3100 R
0 -63 V
stroke
985 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1416 448 M
0 63 V
0 3100 R
0 -63 V
stroke
1416 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
1847 448 M
0 63 V
0 3100 R
0 -63 V
stroke
1847 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MCshow
1.000 UL
LTb
2277 448 M
0 63 V
0 3100 R
0 -63 V
stroke
2277 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
2708 448 M
0 63 V
0 3100 R
0 -63 V
stroke
2708 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MCshow
1.000 UL
LTb
3139 448 M
0 63 V
0 3100 R
0 -63 V
stroke
3139 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
3570 448 M
0 63 V
0 3100 R
0 -63 V
stroke
3570 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7000)]
] -46.7 MCshow
1.000 UL
LTb
4000 448 M
0 63 V
0 3100 R
0 -63 V
stroke
4000 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
4431 448 M
0 63 V
0 3100 R
0 -63 V
stroke
4431 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9000)]
] -46.7 MCshow
1.000 UL
LTb
4862 448 M
0 63 V
0 3100 R
0 -63 V
stroke
4862 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
770 3611 N
770 448 L
4307 0 V
0 3163 V
-4307 0 V
Z stroke
LCb setrgbcolor
112 2029 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Cumulative fraction of collision slots)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
2923 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Slots)]
] -46.7 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
4426 3478 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSMA/CA)]
] -46.7 MRshow
LT0
4510 3478 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
985 2767 M
0 180 V
954 2767 M
62 0 V
-62 180 R
62 0 V
400 -240 R
0 133 V
-31 -133 R
62 0 V
-62 133 R
62 0 V
400 -154 R
0 112 V
-31 -112 R
62 0 V
-62 112 R
62 0 V
399 -118 R
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
400 -97 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
400 -88 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
400 -77 R
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
399 -70 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
400 -67 R
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
400 -63 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
985 2857 Pls
1416 2773 Pls
1847 2742 Pls
2277 2727 Pls
2708 2719 Pls
3139 2713 Pls
3570 2709 Pls
4000 2707 Pls
4431 2704 Pls
4862 2703 Pls
4709 3478 Pls
% End plot #1
% Begin plot #2
2.000 UL
LT0
985 2857 M
431 -84 V
431 -31 V
430 -15 V
431 -8 V
431 -6 V
431 -4 V
430 -2 V
431 -3 V
431 -1 V
% End plot #2
% Begin plot #3
1.000 UP
stroke
LT2
LCb setrgbcolor
4426 3338 M
[ [(Helvetica) 140.0 0.0 true true 0 (Basic CSMA/ECA)]
] -46.7 MRshow
LT2
4510 3338 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
985 1966 M
0 198 V
954 1966 M
62 0 V
-62 198 R
62 0 V
400 -269 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
400 -163 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
399 -122 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
400 -103 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
400 -89 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
400 -82 R
0 73 V
-31 -73 R
62 0 V
-62 73 R
62 0 V
399 -75 R
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
400 -70 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
400 -66 R
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
985 2065 Star
1416 1965 Star
1847 1927 Star
2277 1908 Star
2708 1896 Star
3139 1891 Star
3570 1886 Star
4000 1882 Star
4431 1879 Star
4862 1877 Star
4709 3338 Star
% End plot #3
% Begin plot #4
2.000 UL
LT2
985 2065 M
431 -100 V
431 -38 V
430 -19 V
431 -12 V
431 -5 V
431 -5 V
430 -4 V
431 -3 V
431 -2 V
% End plot #4
% Begin plot #5
1.000 UP
stroke
LT3
LCb setrgbcolor
4426 3198 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSMA/ECA w/ hysteresis)]
] -46.7 MRshow
LT3
4510 3198 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
985 691 M
0 77 V
954 691 M
62 0 V
-62 77 R
62 0 V
1416 569 M
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
400 -80 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
399 -46 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
400 -32 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
400 -24 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
400 -19 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
399 -16 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
400 -13 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
400 -12 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
985 730 Box
1416 589 Box
1847 542 Box
2277 519 Box
2708 505 Box
3139 495 Box
3570 488 Box
4000 483 Box
4431 479 Box
4862 476 Box
4709 3198 Box
% End plot #5
% Begin plot #6
2.000 UL
LT3
985 730 M
1416 589 L
431 -47 V
430 -23 V
431 -14 V
431 -10 V
431 -7 V
430 -5 V
431 -4 V
431 -3 V
% End plot #6
% Begin plot #7
1.000 UP
stroke
LT8
LCb setrgbcolor
4426 3058 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSMA/ECA w/ hysteresis and fair-share)]
] -46.7 MRshow
LT8
4510 3058 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
985 698 M
0 76 V
954 698 M
62 0 V
-62 76 R
62 0 V
1416 573 M
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
400 -81 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
399 -47 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
400 -32 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
400 -24 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
400 -19 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
399 -16 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
400 -13 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
400 -12 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
985 736 TriUF
1416 593 TriUF
1847 544 TriUF
2277 520 TriUF
2708 506 TriUF
3139 496 TriUF
3570 489 TriUF
4000 484 TriUF
4431 480 TriUF
4862 477 TriUF
4709 3058 TriUF
% End plot #7
% Begin plot #8
2.000 UL
LT8
985 736 M
1416 593 L
431 -49 V
430 -24 V
431 -14 V
431 -10 V
431 -7 V
430 -5 V
431 -4 V
431 -3 V
% End plot #8
stroke
1.000 UL
LTb
770 3611 N
770 448 L
4307 0 V
0 3163 V
-4307 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
